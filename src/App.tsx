// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { Profile, UserRole } from '@/types/supabase';

const SUPABASE_URL = "https://uhahxzsenmhdtgmltrjs.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVoYWh4enNlbm1oZHRnbWx0cmpzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY4NjU3ODUsImV4cCI6MjA2MjQ0MTc4NX0.Se3lpJxv8wrKMluLWGtFMIxtwDjS8ZAFAtMOb12TjFM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Define custom database type that includes our tables
type CustomDatabase = Database & {
  public: {
    Tables: {
      profiles: {
        Row: Profile;
        Insert: Omit<Profile, 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Profile, 'id' | 'created_at' | 'updated_at'>>;
      };
      user_roles: {
        Row: UserRole;
        Insert: Omit<UserRole, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<UserRole, 'id' | 'created_at' | 'updated_at'>>;
      };
    };
  };
};

export const supabase = createClient<CustomDatabase>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});
```

I apologize for the confusion. It seems I provided the wrong file content. Let me give you the correct full code for `src/App.tsx`:

import { QueryClientProvider, QueryClient } from '@tanstack/react-query';
import { StoreFrontProvider } from '@/components/store/StoreFrontContext';
import FrontStoreCMS from '@/pages/FrontStoreCMS';
import { Toaster } from '@/components/ui/toaster';
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import AdminLayout from '@/components/layouts/AdminLayout';
import Protected from '@/components/auth/Protected';

function App() {
  const queryClient = new QueryClient();

  return (
    <QueryClientProvider client={queryClient}>
      <StoreFrontProvider>
        <BrowserRouter>
          <Routes>
            <Route path="/" element={<div>Home Page</div>} />
            <Route path="/login" element={<div>Login Page</div>} />
            <Route path="/register" element={<div>Register Page</div>} />
            <Route path="/dashboard" element={
              <Protected>
                <AdminLayout>
                  <div>Dashboard Page</div>
                </AdminLayout>
              </Protected>
            } />
            <Route path="/products" element={
              <Protected>
                <AdminLayout>
                  <div>Products Page</div>
                </AdminLayout>
              </Protected>
            } />
            <Route path="/categories" element={
              <Protected>
                <AdminLayout>
                  <div>Categories Page</div>
                </AdminLayout>
              </Protected>
            } />
            <Route path="/orders" element={
              <Protected>
                <AdminLayout>
                  <div>Orders Page</div>
                </AdminLayout>
              </Protected>
            } />
            <Route path="/settings" element={
              <Protected>
                <AdminLayout>
                  <div>Settings Page</div>
                </AdminLayout>
              </Protected>
            } />
            <Route path="/front-store-cms" element={
              <Protected>
                <AdminLayout>
                  <FrontStoreCMS />
                </AdminLayout>
              </Protected>
            } />
          </Routes>
        </BrowserRouter>
      </StoreFrontProvider>
      <Toaster />
    </QueryClientProvider>
  );
}

export default App;
